import 'dotenv/config';
import { Hono } from "hono";
import { readFile } from "fs/promises";
import * as path from "path";
import { db } from '../db/index.js';
import { categories } from '../db/schema.js';

// ‚úÖ [‡πÅ‡∏Å‡πâ] import serveStatic ‡∏à‡∏≤‡∏Å path ‡πÉ‡∏´‡∏°‡πà
import { serveStatic } from "@hono/node-server/serve-static";
import { getCookie } from "hono/cookie";



type Variables = {
  user?: {
    id: number;
    // add other user properties if needed
  };
};

const homeRoute = new Hono<{ Variables: Variables }>();

// ‚úÖ [‡πÄ‡∏û‡∏¥‡πà‡∏°] ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå static (‡πÄ‡∏ä‡πà‡∏ô auth-style.css) ‡∏à‡∏≤‡∏Å src/pages
homeRoute.use(
  "/",
  serveStatic({
    root: path.join(process.cwd(), "src/pages"),
  })
);

// ‚úÖ Utility ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤ HTML
async function loadPage(filename: string) {
  const filePath = path.join(process.cwd(), "src/pages", filename);
  return await readFile(filePath, "utf-8");
}

// ----------------------------------------------------
// üîπ ‡∏´‡∏ô‡πâ‡∏≤ homepage
// ----------------------------------------------------


// ‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
homeRoute.get("/categories", async (c) => {
  const result = await db.select().from(categories);
  return c.json(result);
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
homeRoute.post("/categories", async (c) => {
  const body = await c.req.json();
  // ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ user id ‡∏à‡∏≤‡∏Å session ‡∏´‡∏£‡∏∑‡∏≠ token
  const userCookie = getCookie(c, "user");
  const user = userCookie ? JSON.parse(userCookie) : null;
  if (!user) return c.json({ error: 'Unauthorized' }, 401);
  const inserted = await db.insert(categories).values({
    name: body.name,
    createdBy: user.id,
  }).returning();
  return c.json(inserted[0]);
});


// ‡∏´‡∏ô‡πâ‡∏≤ homepage (render)
homeRoute.get("/", async (c) => {
  return c.html(await loadPage("homepage.html"));
});

// ‡∏´‡∏ô‡πâ‡∏≤ createpost (render)
homeRoute.get("/createpost", async (c) => {
  return c.html(await loadPage("create_post.html"));
});

// ‡∏´‡∏ô‡πâ‡∏≤ profile (render)
homeRoute.get("/profile", async (c) => {
  return c.html(await loadPage("profile.html"));
});

// ‡∏´‡∏ô‡πâ‡∏≤ post (render) ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ /post?id=...
homeRoute.get("/post", async (c) => {
  return c.html(await loadPage("post.html"));
});

export { homeRoute };